{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Using Crossplane to Automate Dynatrace Configuration as Code on Kubernetes","text":"<p>Larger Images</p> <p>To enlarge images, right click and open in new tab.</p> <p>In this hands-on demo, you will use Crossplane and Terraform configuration as code to keep Dynatrace in sync automatically.</p> <ol> <li>You fork this repository</li> <li>Terraform code is stored in your forked Git repository</li> <li>Crossplane watches this Git repo</li> <li>Crossplane ensures the state declared in Git == the state in Dynatrace</li> </ol> <p></p>"},{"location":"#compatibility","title":"Compatibility","text":"Deployment Tutorial Compatible Dynatrace Managed \u2714\ufe0f Dynatrace SaaS \u2714\ufe0f <p>Fork Repo</p> <p>Fork this repo before continuing!</p> <p>During this tutorial you will need to write to the repo so you need a fork!</p> <ul> <li>Click Here to Begin </li> </ul>"},{"location":"cleanup/","title":"Cleanup","text":"<p>To cleanup resources, go to https://github.com/codespaces and delete the codespace.</p> <p>You may also want to deactivate or delete the API token.</p> <ul> <li>What's Next? </li> </ul>"},{"location":"getting-started/","title":"Getting Started","text":""},{"location":"getting-started/#dynatrace-environment","title":"Dynatrace Environment","text":"<p>You must have access to a Dynatrace SaaS environment. Sign up here</p> <p>Save the Dynatrace environment ID and environment</p> <ul> <li>The ID is the first portion of the URL. (eg. <code>acb12345</code> from <code>https://abc12345.live.dynatrace.com</code>)</li> <li>Your environment is probably <code>live</code> but could also be <code>sprint</code> or <code>dev</code></li> </ul>"},{"location":"getting-started/#create-api-token","title":"Create API Token","text":"<p>API Token Permissions</p> <p>In this demo, you will only create an auto-tag rule, therefore the only permissions you require are <code>settings.read</code> and <code>settings.write</code></p> <p>However, if you want to create additional configuration, your API tokens will differ and you may need an OAuth client.</p> <p>If you choose to extend this tutorial, refer to the Terraform documentation to understand exactly which permissions you require.</p> <p>In Dynatrace:</p> <ul> <li>Press <code>ctrl + k</code>. Search for <code>access tokens</code>.</li> <li>Create a new access token with the following permissions:<ul> <li><code>settings.read</code></li> <li><code>settings.write</code></li> <li><code>metrics.ingest</code></li> </ul> </li> </ul> <p>Token used by Crossplane</p> <p>Crossplane will use this API token to push and pull data from your Dynatrace environment.</p>"},{"location":"getting-started/#start-demo","title":"Start Demo","text":"<p>Click this button to open the demo environment. This will open in a new tab.</p> <p></p> <p>Use your repository</p> <p>In the repository dropdown be sure to use <code>yourUsername/demo-crossplane</code></p> <p>Price</p> <p>GitHub includes a generous free tier. If you follow the cleanup instructions to delete your codespace once done, you will not be charged.</p> <ul> <li>Select your repository from the repository dropdown box.</li> <li>Fill in the form with the details you've already gathered.</li> <li>Click <code>Create codespace</code></li> <li>Proceed to the next documentation step with the link below.</li> </ul> <p></p> <ul> <li>Click Here to Continue </li> </ul>"},{"location":"installation-explained/","title":"3. Installation Explained","text":""},{"location":"installation-explained/#wait-for-system","title":"Wait for System","text":"<p>The system may still be loading.</p> <p>Wait until the <code>Running postCreate command</code> loading spinner disappears.</p> <p>Wait here until the terminal prompt looks like this (your username will differ).</p> <p></p>"},{"location":"installation-explained/#setup-and-configuration-explanation","title":"Setup and Configuration Explanation","text":"<p>The codespace automatically creates a Kubernetes cluster.</p> <p>Onto that cluster, the startup script:</p> <ul> <li>Creates a namespace <code>crossplane-system</code></li> <li>Creates a secret in that namespace <code>dt-details</code> which stores your Dynatrace endpoint and API token</li> <li>Installs the Crossplane Terraform provider and configures it to run in debug mode, poll repositories every minute and attemp a maximum of 10 concurrent reconcilliations (see terraform-config.yaml)</li> <li>Configures the Crossplane Terraform provider to use the Dynatrace provider (see terraform-provider-config.yaml)</li> <li>Modifies workspace-remote.yaml to point to your repository</li> </ul> <p>Summary</p> <p>Crossplane is now running and watching the <code>config_as_code</code> folder of your repository.</p> <p>Crossplane will ensure that configurations in that folder are applied to your Dynatrace environment</p> <ul> <li>Click Here to Continue </li> </ul>"},{"location":"resources/","title":"Resources","text":"<ul> <li> Crossplane Observability and Traceability for Effective Multi-Cloud Management (Victor Farcic and Katharina Sick)</li> <li> How to ensure Crossplane Resilience through Observability</li> </ul>"},{"location":"view-configuration/","title":"4. View Configuration in Dynatrace","text":""},{"location":"view-configuration/#see-tags-in-dynatrace","title":"See Tags in Dynatrace","text":"<p><code>config_as_code/main.tf</code> contains a single auto-tag rule called <code>created-by-crossplane</code>.</p> <p>That auto tag should now exist in your Dynatrace environment.</p> <p>In Dynatrace:</p> <ul> <li>Press <code>ctrl + k</code>. Search for <code>settings</code></li> <li>Go to <code>Settings &gt; Tags &gt; Automatically applied tags</code></li> </ul> <p></p>"},{"location":"view-configuration/#make-a-change","title":"Make a Change","text":"<p>In the codespace:</p> <ul> <li>Open <code>config_as_code/main.tf</code></li> <li>Change the `description from:</li> </ul> <pre><code>description = \"this is an autotag rule created by crossplane\"\n</code></pre> <p>to</p> <pre><code>description = \"this is an autotag rule created by crossplane ABC123\"\n</code></pre> <ul> <li>Save that configuration back to your Git repository:</li> </ul> <pre><code>git add config_as_code/main.tf\ngit commit -m \"update auto-tag rule\"\ngit push\n</code></pre> <p>Wait 1 minute (recall that Crossplane is configured to sync once per minute).</p> <p>Refresh the Dynatrace UI.</p> <p>Open the auto-tag rule and you should see the changes reflected.</p> <p></p> <ul> <li>Click Here to Continue </li> </ul>"},{"location":"whats-next/","title":"What's Next?","text":""},{"location":"whats-next/#todo","title":"TODO","text":"<ol> <li>This Observability Lab will be expanded to include a second tutorial on how to configure Observability for Crossplane.</li> </ol>"},{"location":"observability/","title":"Crossplane Observability","text":"<p>Under Construction</p> <p>This section is a work in progress and is not yet ready for consumption.</p> <p>Crossplane is running but it makes sense that we should be making sure that Crossplane is behaving correctly.</p>"}]}